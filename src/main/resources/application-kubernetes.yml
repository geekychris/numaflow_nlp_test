spring:
  application:
    name: numaflow-enrichment-app-k8s

# Kubernetes-specific logging
logging:
  level:
    com.example.numaflow: INFO
    org.springframework: WARN
    io.numaproj: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%15.15t] %-5level %-40.40logger{39} : %msg%n"
  file:
    name: /app/logs/application.log
  logback:
    rollingpolicy:
      max-file-size: 50MB
      max-history: 10
      total-size-cap: 500MB

# Kubernetes networking
server:
  port: 8080
  address: 0.0.0.0
  shutdown: graceful

# Enhanced health checks for Kubernetes
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState,diskSpace
        readiness:
          include: readinessState,nlp
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: kubernetes

# Kubernetes-specific app configuration
app:
  nlp:
    fallback-enabled: true
    models:
      sentence-model: file:/app/models/en-sent.bin
      tokenizer-model: file:/app/models/en-token.bin
      ner-models:
        person: file:/app/models/en-ner-person.bin
        location: file:/app/models/en-ner-location.bin
        organization: file:/app/models/en-ner-organization.bin
  
  processing:
    batch-size: 500
    timeout-ms: 120000

# Graceful shutdown
spring:
  lifecycle:
    timeout-per-shutdown-phase: 30s

# Micrometer metrics
management:
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
      sla:
        http.server.requests: 100ms, 500ms, 1s, 2s
